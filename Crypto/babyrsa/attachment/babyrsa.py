from Crypto.Util.number import *
from gmpy2 import *
from flag import flag


def genprime():
    k = getRandomNBitInteger(64)
    p = 2023*k**5 + 2022*k**4 - 2023*k**3 - 2021*k**2 + 2020*k + 2019
    q = 2023*k**5 - 2022*k**4 + 2023*k**3 - 2021*k**2 + 2020*k - 2019
    p =next_prime(p)
    q =next_prime(q)
   
    return p,q

def encrypt(m,e,p,q):
    
    cp = pow(m,e,p)
    cq = pow(m,e,q)
    return cp,cq

m = bytes_to_long(flag)
p,q = genprime()
n = p*q
e = 65537
cp,cq = encrypt(m,e,p,q)

print(f'cp = {cp}')
print(f'cq = {cq}')
print(f'e = {e}')
print(f'n = {n}')

'''

cp = 2854045268997140976570334790428763240513500019149400436613142868335945263379467591853366697227107586
cq = 2494484311723819638413800240084208008904275742320719697549764543598571556799985927971610177096369636
e = 65537
n = 13574725874794792569752010201054779889224291903415330316348070100599148594095766593716264016722437705376993229867884075662817272782678049089454816620182641887150409364565092107122856566595007877056721


'''